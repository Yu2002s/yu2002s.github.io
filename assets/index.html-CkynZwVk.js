import{_ as s,o as a,c as e,e as n}from"./app-CV__oJZ3.js";const l={};function t(h,i){return a(),e("div",null,i[0]||(i[0]=[n(`<h2 id="布局" tabindex="-1"><a class="header-anchor" href="#布局"><span>布局</span></a></h2><h3 id="intrinsicsize" tabindex="-1"><a class="header-anchor" href="#intrinsicsize"><span>IntrinsicSize</span></a></h3><p>设置这个属性时，子组件的宽度或高度会根据内容自动调整。</p><div class="language-kotlin line-numbers-mode" data-ext="kotlin" data-title="kotlin"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">fun</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> TwoTexts</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(modifier: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">Modifier</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Modifier, text1: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, text2: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    Row</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(modifier </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> modifier) {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            modifier </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Modifier</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">weight</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1f</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">padding</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(start </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.dp)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wrapContentWidth</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(Alignment.Start),</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            text </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> text1</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        VerticalDivider</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            color </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Color.Black,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            modifier </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Modifier.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fillMaxHeight</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">().</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">width</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.dp)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            modifier </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Modifier</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">weight</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1f</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">padding</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(end </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.dp)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wrapContentWidth</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(Alignment.End),</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            text </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> text2</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当设置这个布局显示的时候，中间的分割线会撑满整个布局，不会和文本高度一致，为了解决这个问题，可以给父布局设置 <code>intrinsicSize</code> 属性。</p><div class="language-kotlin line-numbers-mode" data-ext="kotlin" data-title="kotlin"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark has-highlighted vp-code"><code><span class="line highlighted"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Row</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(modifier </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> modifier.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">height</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(IntrinsicSize.Min)) { </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="remember" tabindex="-1"><a class="header-anchor" href="#remember"><span>remember</span></a></h2><p><code>remember</code> 函数可以缓存一个值，当这个值发生变化时，会重新计算这个值。</p><div class="language-kotlin line-numbers-mode" data-ext="kotlin" data-title="kotlin"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">val</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> rememberedValue </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> remember</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    mutableStateOf</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="remembersaveable" tabindex="-1"><a class="header-anchor" href="#remembersaveable"><span>rememberSaveable</span></a></h3><p><code>rememberSaveable</code> 和 remember 一样，不过当<code>activity</code>重启时将保存状态</p><div class="language-kotlin line-numbers-mode" data-ext="kotlin" data-title="kotlin"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">val</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> rememberedValue </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> rememberSaveable</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    mutableStateOf</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 kotlin 委托，可以免去写多余的 <code>value</code> 字段</p><div class="language-kotlin line-numbers-mode" data-ext="kotlin" data-title="kotlin"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">val</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> rememberedValue </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">by</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> remember</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    mutableStateOf</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">rememberedValue </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> !</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">rememberedValue</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="状态" tabindex="-1"><a class="header-anchor" href="#状态"><span>状态</span></a></h2><p><code>mutableStateOf</code> 函数可以创建一个可观察的状态，当这个状态发生变化时，会重新计算这个值。</p><div class="language-kotlin line-numbers-mode" data-ext="kotlin" data-title="kotlin"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">val</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> rememberedValue </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> remember</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    mutableStateOf</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17)]))}const k=s(l,[["render",t],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/android/compose/0ji6ncyv/","title":"学习Compose","lang":"zh-CN","frontmatter":{"title":"学习Compose","createTime":"2025/08/17 17:14:42","permalink":"/android/compose/0ji6ncyv/","description":"布局 IntrinsicSize 设置这个属性时，子组件的宽度或高度会根据内容自动调整。 当设置这个布局显示的时候，中间的分割线会撑满整个布局，不会和文本高度一致，为了解决这个问题，可以给父布局设置 intrinsicSize 属性。 remember remember 函数可以缓存一个值，当这个值发生变化时，会重新计算这个值。 rememberSav...","head":[["meta",{"property":"og:url","content":"https://www.jdynb.xyz/android/compose/0ji6ncyv/"}],["meta",{"property":"og:site_name","content":"冬日暖雨"}],["meta",{"property":"og:title","content":"学习Compose"}],["meta",{"property":"og:description","content":"布局 IntrinsicSize 设置这个属性时，子组件的宽度或高度会根据内容自动调整。 当设置这个布局显示的时候，中间的分割线会撑满整个布局，不会和文本高度一致，为了解决这个问题，可以给父布局设置 intrinsicSize 属性。 remember remember 函数可以缓存一个值，当这个值发生变化时，会重新计算这个值。 rememberSav..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-31T06:13:29.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-31T06:13:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"学习Compose\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-31T06:13:29.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"布局","slug":"布局","link":"#布局","children":[{"level":3,"title":"IntrinsicSize","slug":"intrinsicsize","link":"#intrinsicsize","children":[]}]},{"level":2,"title":"remember","slug":"remember","link":"#remember","children":[{"level":3,"title":"rememberSaveable","slug":"remembersaveable","link":"#remembersaveable","children":[]}]},{"level":2,"title":"状态","slug":"状态","link":"#状态","children":[]}],"readingTime":{"minutes":0.9,"words":271},"git":{"createdTime":1756620809000,"updatedTime":1756620809000,"contributors":[{"name":"Yu2002s","email":"jiangdongyu54@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"notes/android/compose/学习Compose.md","categoryList":[{"id":"4358b5","sort":10010,"name":"notes"},{"id":"aa97c6","sort":10002,"name":"android"},{"id":"ff31d6","sort":10012,"name":"compose"}],"bulletin":false}');export{k as comp,d as data};
