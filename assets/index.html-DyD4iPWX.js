import{_ as s,o as l,c as a,e}from"./app-CV__oJZ3.js";const n={};function t(h,i){return l(),a("div",null,i[0]||(i[0]=[e(`<h2 id="一、说说对盒模型的理解" tabindex="-1"><a class="header-anchor" href="#一、说说对盒模型的理解"><span>一、说说对盒模型的理解</span></a></h2><p>css在文档布局的时候，会对每一个元素看作一个个矩形盒子 盒模型分为两种：标准盒模型，怪异盒模型</p><ul><li>标准盒模型：</li></ul><ul><li>盒子的总宽高 = width / height + padding + border + margin</li></ul><ul><li>怪异和盒模型</li></ul><ul><li>盒子的总宽高 = width / height + margin 可以通过box-sizing : border-box / content-box 设定盒模型类型</li></ul><h2 id="二、css选择器有哪些-优先级是什么" tabindex="-1"><a class="header-anchor" href="#二、css选择器有哪些-优先级是什么"><span>二、CSS选择器有哪些，优先级是什么</span></a></h2><p>CSS选择器分为id选择器、类选择器、标签选择器、后代选择器、后代选择器、子选择器、相邻选择器 还有伪类选择器、属性选择器 优先级是 内联 &gt; ID选择器 &gt; 类选择器 &gt; 标签选择器 因为伪类选择器也是类的一种，所以他的优先级代码是 10 与之同级的还有属性选择器 标签属于元素，伪元素属于元素所以他们的优先级代码为1</p><h2 id="三、哪些属性可以继承" tabindex="-1"><a class="header-anchor" href="#三、哪些属性可以继承"><span>三、哪些属性可以继承</span></a></h2><ul><li>文本的属性比如font</li><li>文本系列的比如缩进、行高等</li><li>列表属性list-style</li><li>光标属性</li></ul><h2 id="四、em-px-rem-vh、vw-有什么区别" tabindex="-1"><a class="header-anchor" href="#四、em-px-rem-vh、vw-有什么区别"><span>四、em / px / rem / (vh、vw)有什么区别</span></a></h2><p>他们都是前端开发中能用到的单位 em：相对长度单位，指的是相对于对象内文本的尺寸，如果此文本没有设置单位，则使用浏览器的长度单位 px：1.1的比例下1px对应1像素点，就是浏览器的每个像素点 rem：相对单位，相对于HTML根元素的字体尺寸 vw/vh：就是将浏览器的窗口分为100份，在pc端指的是浏览器的可视区域，移动端指的是视口 rem 和 px的转化 如果设计稿是750px 我们将布局分为100份 那么 1 rem = 7.5px</p><h2 id="五、web移动端适配问题" tabindex="-1"><a class="header-anchor" href="#五、web移动端适配问题"><span>五、web移动端适配问题</span></a></h2><ol><li>移动端采用什么布局 定宽布局，一般使用的设计稿是750px，使用响应式的方式，有两种解决方案 正常是使用lib-flexible vant中也有解决方案，使用postcss-px-to-viewport或者使用postcss-pxtorem插件 + lib-flexible</li><li>移动端在什么浏览器上面测试 chorme，safari（苹果浏览器），微信x5，uc，还有手机自带的浏览器</li><li>移动端怎么做竖屏显示 检测到竖屏的时候，给元素添加90deg旋转，检测到横屏改为0deg</li><li>为什么移动端click会有300ms延迟 移动端的浏览器会有一些默认行为，比如双击缩放，双击滚动，主要是为了增加用户体验设计的，当用户操作的时候，会优先判断是否触发了默认行为</li><li>固定定位布局键盘挡住输入框内容 一般没有用到固定布局😂</li></ol><ul><li>在键盘弹出时判断可视区高度和输入框高度，看输入框是否还在可视区，</li><li>如果不在可视区，就将input的固定定位位置改变</li></ul><ol start="6"><li>为什么安卓浏览器看背景图片，有些设备会模糊 如果手机分辨率小，如果按照分辨率显示网页字就会非常小，如果想要使图片更为清晰，就使用background-size：contain</li><li>移动端1px问题及解决方案</li></ol><p>在移动端，因为屏幕分辨率的问题，分为一倍屏、二倍屏、三倍屏所以1px可能会被渲染成2、3像素点 方法1. 用height 1 的div，然后用媒体查询，设置transform：scale(.5) 方法2. 用伪类设置线，然后缩放 方法3. 使用js的方式，线判断几倍屏然后修改视口的属性</p><div class="language-typescript line-numbers-mode" data-ext="typescript" data-title="typescript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 不用看，用到复制上去</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">var </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">viewport</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> document</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">querySelector</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">meta[name=viewport]</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//下面是根据设备像素设置viewport</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">window</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">devicePixelRatio</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  viewport</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setAttribute</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">content</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">width=device-width,initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">window</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">devicePixelRatio</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  viewport</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setAttribute</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">content</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">width=device-width,initial-scale=0.5, maximum-scale=0.5, minimum-scale=0.5, user-scalable=no</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">window</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">devicePixelRatio</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  viewport</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setAttribute</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">content</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">width=device-width,initial-scale=0.3333333333333333, maximum-scale=0.3333333333333333, minimum-scale=0.3333333333333333, user-scalable=no</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="8"><li>设备像素、css像素、设备独立像素、dpr、ppi之间的区别 设备像素：就是物理像素，设备控制最小物理单位 css像素：按照缩放比例，将内容展示在屏幕中，1：1的缩放比例下， css像素与物理像素一一对应 dpr：代表独立像素到设备像素的转换关系 ppi：像素密度</li></ol><h2 id="六、bfc机制的理解" tabindex="-1"><a class="header-anchor" href="#六、bfc机制的理解"><span>六、BFC机制的理解</span></a></h2><p>BFC即块级格式化上下文，它是页面中的渲染区域，并且有一套属于自己的渲染机制</p><ul><li>内部的盒子会垂直方向一个一个放置</li><li>对于同一个BFC两个相邻盒子margin会重叠，与方向无关</li><li>BFC区域不会与浮动元素重合，早期用于做两栏布局</li><li>计算BFC元素高度时，浮动元素也会参与计算</li><li>容器中与容器外不会互相打扰 BFC元素的触发条件</li><li>根元素</li><li>浮动元素</li><li>overflow值不为visible</li><li>display：为table、flex等</li><li>定位的元素 应用场景</li><li>防止margin重叠，两个盒子分别触发BFC机制</li><li>清除浮动</li><li>清除高度塌陷</li><li>两栏布局</li></ul><h2 id="七、元素水平垂直居中的方法" tabindex="-1"><a class="header-anchor" href="#七、元素水平垂直居中的方法"><span>七、元素水平垂直居中的方法</span></a></h2><ul><li>定位然后都设置为0，margin：auto</li><li>定位top、left 50% 然后transform</li><li>flex布局</li></ul><h2 id="八、dom重绘和回流" tabindex="-1"><a class="header-anchor" href="#八、dom重绘和回流"><span>八、dom重绘和回流</span></a></h2><p>重绘：当页面的颜色，背景颜色等发生改变时会触发浏览器对页面的绘制 回流：浏览器对所有的内容重新进行计算 回流触发的时机：</p><ul><li>页面的布局发生改变</li><li>添加删除元素</li><li>元素位置发生改变、页面尺寸、浏览器窗口发生改变</li><li>还有最重要的一个浏览器获取元素的特定属性比如offset等 如何减少重绘</li><li>读写分离</li><li>多用浏览器的动画，</li><li>对于复杂的动画，最好脱离文档流</li><li>多使用transform、opactiy这些都特殊处理过，不会进行重绘</li><li>避免使用css表达式 九、CSS优化</li><li>异步加载css</li><li>合理使用选择器，因为选择器是从右到左加载，所以耗费比较高</li><li>压缩css</li><li>读写分离</li><li>不要使用css表达式 十、单行 / 多行文本溢出省略 单行： <code>text-overflow:elipsis;</code><code>white-space: nowrap;</code><code>overflow:hidden</code> 多行：</li></ul><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">-webkit-line-clamp: 2;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">display: -webkit-box;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">-webkit-box-orient: vertical;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">overflow: hidden;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">text-overflow</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: ellipsis;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>十一、CSS画三角形</p><ol><li>宽高都设置为0</li><li>设置border-width</li><li>设置某个方向的border-color 十二、CSS预编译语言 sass、less、stylus</li></ol>`,30)]))}const r=s(n,[["render",t],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/interview/94vcmy6t/","title":"CSS基础面试题","lang":"zh-CN","frontmatter":{"title":"CSS基础面试题","createTime":"2024/07/09 20:56:51","permalink":"/interview/94vcmy6t/","description":"一、说说对盒模型的理解 css在文档布局的时候，会对每一个元素看作一个个矩形盒子 盒模型分为两种：标准盒模型，怪异盒模型 标准盒模型： 盒子的总宽高 = width / height + padding + border + margin 怪异和盒模型 盒子的总宽高 = width / height + margin 可以通过box-sizing : ...","head":[["meta",{"property":"og:url","content":"https://www.jdynb.xyz/interview/94vcmy6t/"}],["meta",{"property":"og:site_name","content":"冬日暖雨"}],["meta",{"property":"og:title","content":"CSS基础面试题"}],["meta",{"property":"og:description","content":"一、说说对盒模型的理解 css在文档布局的时候，会对每一个元素看作一个个矩形盒子 盒模型分为两种：标准盒模型，怪异盒模型 标准盒模型： 盒子的总宽高 = width / height + padding + border + margin 怪异和盒模型 盒子的总宽高 = width / height + margin 可以通过box-sizing : ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-17T04:45:49.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-17T04:45:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS基础面试题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-17T04:45:49.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一、说说对盒模型的理解","slug":"一、说说对盒模型的理解","link":"#一、说说对盒模型的理解","children":[]},{"level":2,"title":"二、CSS选择器有哪些，优先级是什么","slug":"二、css选择器有哪些-优先级是什么","link":"#二、css选择器有哪些-优先级是什么","children":[]},{"level":2,"title":"三、哪些属性可以继承","slug":"三、哪些属性可以继承","link":"#三、哪些属性可以继承","children":[]},{"level":2,"title":"四、em / px / rem / (vh、vw)有什么区别","slug":"四、em-px-rem-vh、vw-有什么区别","link":"#四、em-px-rem-vh、vw-有什么区别","children":[]},{"level":2,"title":"五、web移动端适配问题","slug":"五、web移动端适配问题","link":"#五、web移动端适配问题","children":[]},{"level":2,"title":"六、BFC机制的理解","slug":"六、bfc机制的理解","link":"#六、bfc机制的理解","children":[]},{"level":2,"title":"七、元素水平垂直居中的方法","slug":"七、元素水平垂直居中的方法","link":"#七、元素水平垂直居中的方法","children":[]},{"level":2,"title":"八、dom重绘和回流","slug":"八、dom重绘和回流","link":"#八、dom重绘和回流","children":[]}],"readingTime":{"minutes":5.59,"words":1677},"git":{"createdTime":1731818749000,"updatedTime":1731818749000,"contributors":[{"name":"jdy2002","email":"jiangdongyu54@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"notes/interview/基础/2.CSS基础面试题.md","bulletin":false}');export{r as comp,k as data};
